{"version":3,"file":"static/js/802.32012d78.chunk.js","mappings":"yNAmCA,UA/Be,WACb,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAgBJ,GAFzB,gBAETK,EAFS,EAETA,QAERN,EAAgBM,GAJC,gDAMjBC,QAAQC,IAAR,MANiB,yDAAH,qDASlBJ,GACD,GAAE,CAACH,KAEe,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcU,QAAS,GAC5B,wBACGV,EAAaW,KAAI,gBAAGC,EAAH,EAAGA,OAAQV,EAAX,EAAWA,GAAIW,EAAf,EAAeA,QAAf,OAChB,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGX,EADO,OAQpB,uBAAG,4BAEN,C","sources":["components/Review/Review.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nconst Review = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const { results } = await getMovieReviews(id);\n\n        setMovieReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieCast();\n  }, [id]);\n\n  return movieReviews?.length > 0 ? (\n    <ul>\n      {movieReviews.map(({ author, id, content }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We don`t have any review</p>\n  );\n};\n\nexport default Review;\n"],"names":["useState","movieReviews","setMovieReviews","id","useParams","useEffect","getMovieCast","getMovieReviews","results","console","log","length","map","author","content"],"sourceRoot":""}