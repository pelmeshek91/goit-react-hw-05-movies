{"version":3,"file":"static/js/67.c0870a88.chunk.js","mappings":"mQAEaA,EAAOC,EAAAA,GAAAA,KAAH,gFAKJC,EAASD,EAAAA,GAAAA,OAAH,yRAeNE,EAAQF,EAAAA,GAAAA,MAAH,2H,SCSlB,EA5BmB,SAAC,GAAqC,IAAnCG,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACpC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OACE,UAACR,EAAD,CAAMS,SANa,SAAAC,GACnBA,EAAIC,iBACJP,EAAeG,EAChB,EAGC,WACE,4BACE,SAACJ,EAAD,CACES,SAda,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAEhCL,EAD6B,KAAVK,EAAe,CAAEE,MAAOF,GAAU,CAAC,EAEvD,EAYOG,KAAK,OACLC,KAAK,SACLJ,MAAa,OAANN,QAAM,IAANA,GAAAA,EAAQQ,MAAQR,EAAOQ,MAAQV,OAG1C,SAACH,EAAD,UAAQ,aAGb,E,iBCWD,EAlCmB,WACjB,OAAoCI,EAAAA,EAAAA,UAAS,MAA7C,eAAOY,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMjB,GAAckB,EAAAA,EAAAA,UAClB,kCAAMF,EAAaG,IAAI,gBAAvB,QAAmC,EAAnC,GACA,CAACH,KAGHI,EAAAA,EAAAA,YAAU,WACRpB,GAAeqB,EAAiBrB,EACjC,GAAE,CAACA,IAEJ,IAAMqB,EAAgB,mCAAG,WAAMX,GAAN,mGAEKY,EAAAA,EAAAA,IAAYZ,GAFjB,gBAEba,EAFa,EAEbA,QACRT,EAAcS,GAHO,gDAKrBC,QAAQC,IAAR,MALqB,yDAAH,sDAatB,OACE,4BACE,SAAC,EAAD,CAAY1B,eANO,SAAA2B,GACrBT,EAAgBS,EACjB,EAI+C1B,YAAaA,IACxDa,IAAc,SAACc,EAAA,EAAD,CAAYd,WAAYA,MAG5C,C","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nexport const Button = styled.button`\n  margin: 10px auto 10px 5px;\n  color: #ffffff;\n  background-color: rgb(88, 195, 195);\n  border-color: transparent;\n  border-radius: 3px;\n  padding: 8px;\n  cursor: pointer;\n\n  &:hover {\n    color: '#ff5722';\n    background-color: '#f6f6f6';\n  }\n`;\n\nexport const Input = styled.input`\n  color: '#2a2a2a';\n  background-color: '#fff';\n  &:focus {\n    outline-color: '#ff5722';\n  }\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input } from './SearchForm.styled';\n\nconst SearchForm = ({ resultBySearch, querySearch }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearch(nextParams);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    resultBySearch(search);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"search\"\n          value={search?.query ? search.query : querySearch}\n        />\n      </label>\n      <Button>Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/movies-api';\n\nconst MoviesPage = () => {\n  const [moviesList, setMoviesList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const querySearch = useMemo(\n    () => searchParams.get('query') ?? '',\n    [searchParams]\n  );\n\n  useEffect(() => {\n    querySearch && getMovieBySearch(querySearch);\n  }, [querySearch]);\n\n  const getMovieBySearch = async query => {\n    try {\n      const { results } = await searchMovie(query);\n      setMoviesList(results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const resultBySearch = data => {\n    setSearchParams(data);\n  };\n\n  return (\n    <div>\n      <SearchForm resultBySearch={resultBySearch} querySearch={querySearch} />\n      {moviesList && <MoviesList moviesList={moviesList} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Form","styled","Button","Input","resultBySearch","querySearch","useState","search","setSearch","onSubmit","evt","preventDefault","onChange","value","target","query","type","name","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","useMemo","get","useEffect","getMovieBySearch","searchMovie","results","console","log","data","MoviesList"],"sourceRoot":""}